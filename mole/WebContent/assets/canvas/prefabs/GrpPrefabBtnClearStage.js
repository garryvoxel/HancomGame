
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.2 (Phaser v2.6.2)


/**
 * GrpPrefabBtnClearStage.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function GrpPrefabBtnClearStage(aGame, aX, aY, aIndex, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);

    var _button;
	if (aIndex === 4) {
		_button = aGame.add.button(aX, aY, 'BtnClearMissionStage', this.actionOnClick, this, 0, 0, 1);
	}
	else {
		_button = aGame.add.button(aX, aY, 'BtnClearStage', this.actionOnClick, this, 0, 0, 1);
	}
	_button.onInputOver.add(this.over, aGame);
	_button.onInputOut.add(this.out, aGame);
	_button.visible = false;
	this.add(_button, false, 0);
    
	var _testBmFnt = aGame.add.bitmapText(aX+47.5, aY+63, 'StageNum', '0', 22);
	_testBmFnt.anchor.x = 0.5;
	if (aIndex === 4) {
		_testBmFnt.x = aX+40.5;
		_testBmFnt.y = aY+73;
	}
	_testBmFnt.visible = false;
	this.add(_testBmFnt, false, 1);
	
	this.pos = [
      { x : 7, y : 20 },
      { x : 31, y : 7 },
      { x : 59, y : 20 }];
	
	var _star = new Array();
    for (var i=0; i<3; i++) {
    	_star[i] = aGame.add.sprite(aX + this.pos[i].x, aY + this.pos[i].y, 'Star'+(i+1));
        
    	_star[i].visible = false;
        this.add(_star[i], false, 2+i);
    }

    this.mstarPos = { x : 11, y : 10 };
    var _mstar = aGame.add.sprite(aX + this.mstarPos.x, aY + this.mstarPos.y, 'StarMission');
    _mstar.visible = false;
    this.add(_mstar, false, 5);
    
    this._Idx = aIndex;

    this.setText(""+(aIndex+1) );

}

/** @type Phaser.Group */
var GrpPrefabBtnClearStage_proto = Object.create(Phaser.Group.prototype);
GrpPrefabBtnClearStage.prototype = GrpPrefabBtnClearStage_proto;
GrpPrefabBtnClearStage.prototype.constructor = GrpPrefabBtnClearStage;

/* --- end generated code --- */
// -- user code here --
GrpPrefabBtnClearStage.prototype.over = function () {
};

GrpPrefabBtnClearStage.prototype.out = function () {
};

GrpPrefabBtnClearStage.prototype.actionOnClick = function (evt) {
	this.game.state.getCurrentState().infoPopup(this._Idx);	
};

GrpPrefabBtnClearStage.prototype.setText = function (stageIndex) {
	this.children[1].setText(stageIndex);
	this.children[1].anchor.x = 0.5;

};

GrpPrefabBtnClearStage.prototype.setStar = function (count) {
	var _count = gLoadStageClearData[1][(gCurrentPage * 5) +this._Idx].star;
	
	if (this._Idx === 4) {
		if (_count > 0) {
			this.children[5].visible = true;
		}
	}
	else {
		switch(_count) {
		case 3:
			this.children[4].visible = true;
		case 2:
			this.children[3].visible = true;
		case 1:
			this.children[2].visible = true;
			break;
		}
	}	
};

GrpPrefabBtnClearStage.prototype.setPosition = function (_x, _y) {
	this.children[0].x = _x;
	this.children[0].y = _y;
};

// 1~10까지 테마에 따른 버튼 위치 변경
GrpPrefabBtnClearStage.prototype.changeBtnPos = function (_x, _y) {
	this.children[0].x = _x;
	this.children[0].y = _y;
	
    for (var i=0; i<3; i++) {
    	this.children[2+i].visible = false;
    	this.children[2+i].x = _x + this.pos[i].x;
    	this.children[2+i].y = _y + this.pos[i].y;
    }
    
    this.children[5].visible = false;
    this.children[5].x = _x + this.mstarPos.x;
    this.children[5].y = _y + this.mstarPos.y;
    
	var idx = (gCurrentPage*5)+(this._Idx+1);
	this.setText(""+idx);
	if (this._Idx === 4) {
		this.children[1].x = _x+40.5;
		this.children[1].y = _y+73;
	}
	else {
		this.children[1].x = _x+47.5;
		this.children[1].y = _y+63;
	}
	
};

GrpPrefabBtnClearStage.prototype.show = function () {
	this.children[0].visible = true;
	this.children[1].visible = true;
	this.setStar();
};

GrpPrefabBtnClearStage.prototype.hide = function () {
	this.children[0].visible = false;
	this.children[1].visible = false;
};

GrpPrefabBtnClearStage.prototype.ignoreChildInputEx = function () {
	this.ignoreChildInput = true;
};

GrpPrefabBtnClearStage.prototype.knowChildInputEx = function () {
	this.ignoreChildInput = false;
};


