
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.2 (Phaser v2.6.2)


/**
 * Prefab_talkBox
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function Prefab_talkBox(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'TalkBox_sheet', aFrame == undefined || aFrame == null? 5 : aFrame);

	this._anim_SHOW = this.animations.add('PLAY', [0, 1, 2, 3, 4, 5], 10, false);
	this.anchor.setTo(0.5, 0.6);
	
	this.getWord = "";
	
	this.visible = false;
	
}

/** @type Phaser.Sprite */
var Prefab_talkBox_proto = Object.create(Phaser.Sprite.prototype);
Prefab_talkBox.prototype = Prefab_talkBox_proto;
Prefab_talkBox.prototype.constructor = Prefab_talkBox;

/* --- end generated code --- */
// -- user code here --

Prefab_talkBox.prototype.show = function(_word) {
	// 190329 add
	if (this.idx < 0) 
		return;
	
	this.getWord = _word;
	this.visible = true;
	this._anim_SHOW.play();
	
	var _iconName = [ 'ItemIcon1', 'ItemIcon2', 'ItemIcon3', 'ItemIcon4', 'ItemIcon5', 'ItemIcon6' ];
	this.idx = correctWordList.indexOf(this.getWord);
	this.iconType = itemSpawnTable[this.idx]-1;
	if (this.iconType >= 0) {
		gItemIconLayer[this.iconType].children[this.idx].loadTexture(_iconName[this.iconType], null, null);
		gItemIconLayer[this.iconType].children[this.idx].visible = true;
	}
	
	this.game.time.events.repeat(200, 1, this.showText, this);
	
	// 190301 마이너스 아이템 구현 변경
	if (this.iconType == 3 || this.iconType == 4 || this.iconType == 5 ) {
		gItemIconBlinkLayer.children[this.idx].visible = true;
		gItemIconBlinkLayer.children[this.idx].animations.play('play', 16, true);
	}
	
};

Prefab_talkBox.prototype.hide = function() {
	if (this.idx < 0) {
		return;
	}
	
	if (this.visible == false) {
		return;
	}
	
	// 190318 add
	gWordPanelText.children[this.idx].visible = false;
	this.getWord = "";
	gWordPanelText.children[this.idx].setText(this.getWord, true);
	
	if (this.iconType >= 0) {
		gItemIconLayer[this.iconType].children[this.idx].visible = false;
	}
	
	// 190301 마이너스 아이템 구현 변경
	if (this.iconType == 3 || this.iconType == 4 || this.iconType == 5 ) {
		gItemIconBlinkLayer.children[this.idx].visible = false;
		gItemIconBlinkLayer.children[this.idx].animations.stop('play');
	}
	
	this.visible = false;

};

Prefab_talkBox.prototype.showText = function() {
	
	if (this.idx >= 0 && this.idx <= 7) {
		
		// 190326 modify
		if (gWordPanelText.children[this.idx] !== undefined) {
			gWordPanelText.children[this.idx].setText(this.getWord, true);
			gWordPanelText.children[this.idx].visible = true;
		}

	}
	else {
	}

};

