
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.2 (Phaser v2.6.2)


/**
 * GrpPrefabBtnNextStage.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function GrpPrefabBtnNextStage(aGame, aX, aY, aIndex, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);

    var _button = aGame.add.button(aX, aY, 'BtnNextStage', this.actionOnClick, this, 0, 0, 1);
	_button.visible = false;
	this.add(_button, false, 0);
    
	var _testBmFnt = aGame.add.bitmapText(aX+42.5, aY+28, 'StageNum', '0', 22);
	_testBmFnt.anchor.x = 0.5;
	_testBmFnt.visible = false;
	this.add(_testBmFnt, false, 1);
    
    this._Idx = aIndex;

    this.setText(""+(aIndex+1) );
}

/** @type Phaser.Group */
var GrpPrefabBtnNextStage_proto = Object.create(Phaser.Group.prototype);
GrpPrefabBtnNextStage.prototype = GrpPrefabBtnNextStage_proto;
GrpPrefabBtnNextStage.prototype.constructor = GrpPrefabBtnNextStage;

/* --- end generated code --- */
// -- user code here --

GrpPrefabBtnNextStage.prototype.over = function () {
};

GrpPrefabBtnNextStage.prototype.out = function () {
};

GrpPrefabBtnNextStage.prototype.actionOnClick = function (evt) {
	this.game.state.getCurrentState().infoPopup(this._Idx);		
};

GrpPrefabBtnNextStage.prototype.setText = function (stageIndex) {
	this.children[1].setText(stageIndex);
	this.children[1].anchor.x = 0.5;
};

GrpPrefabBtnNextStage.prototype.setPosition = function (_x, _y) {
	this.children[0].x = _x;
	this.children[0].y = _y;
};

// 1~10까지 테마에 따른 버튼 위치 변경
GrpPrefabBtnNextStage.prototype.changeBtnPos = function (_x, _y) {
	this.children[0].x = _x;
	this.children[0].y = _y;
	
	var idx = (gCurrentPage*5)+(this._Idx+1);
	this.setText(""+idx);
	this.children[1].x = _x+42.5;
	this.children[1].y = _y+28;
	
};

GrpPrefabBtnNextStage.prototype.show = function () {
	this.children[0].visible = true;
	this.children[1].visible = true;
};

GrpPrefabBtnNextStage.prototype.hide = function () {
	this.children[0].visible = false;
	this.children[1].visible = false;

};

GrpPrefabBtnNextStage.prototype.ignoreChildInputEx = function () {
	this.ignoreChildInput = true;
};

GrpPrefabBtnNextStage.prototype.knowChildInputEx = function () {
	this.ignoreChildInput = false;
};

