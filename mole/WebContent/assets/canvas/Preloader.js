
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.3 (Phaser v2.6.2)


/**
 * Preloader.
 */
function Preloader() {
	
	Phaser.State.call(this);
	
}

/** @type Phaser.State */
var Preloader_proto = Object.create(Phaser.State.prototype);
Preloader.prototype = Preloader_proto;
Preloader.prototype.constructor = Preloader;

Preloader.prototype.init = function () {
	
	this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;	
	this.scale.pageAlignHorizontally = true;
	this.scale.pageAlignVertically = false;

	var varUA = navigator.userAgent.toLowerCase(); //userAgent 값 얻기
	if (varUA.match('android') != null) { 
	   //안드로이드 일때 처리
	} else if (varUA.indexOf("iphone")>-1||varUA.indexOf("ipad")>-1||varUA.indexOf("ipod")>-1) { 
	   //IOS 일때 처리
		this.scale.maxWidth = (window.innerHeight * 720) / (800 * 2);
		this.scale.maxHeight = window.innerHeight / 2;
	} else {
	   //아이폰, 안드로이드 외 처리
	}
	
	gIsStarting = true;
	gCurrentPage = 0;
	gOldPage = -1;
	
	gResultText = "";
	
};

Preloader.prototype.preload = function () {
		
	this.game.load.image('Title', 'assets/images/LoadingBackImg.png');
	this.game.load.image('GamesRated', 'assets/images/GamesRated.png');
	
	this.game.load.spritesheet('LoadingTxtSheet', 'assets/spriteSheets/LoadingTxtSheet.png', 322, 65, 4);
	
	this.game.load.spritesheet('BtnGameStartSheet', 'assets/spriteSheets/BtnGameStartSheet.png', 206, 102, 3);
    
	this.game.stage.disableVisibilityChange = true;
	
    this.load.onLoadStart.add(loadStart, this);
    this.load.onFileComplete.add(fileComplete, this);
    this.load.onLoadComplete.add(loadComplete, this);
};

Preloader.prototype.create = function () {
	that = this;
	
	sessionStorage.setItem("NEXT_STAGE", 0);
	sessionStorage.setItem("PLAY_STAGE", 0);
	
	var _title = this.game.add.sprite(360.0, 400.0, 'Title');
	_title.anchor.x = 0.5;
	_title.anchor.y = 0.5;
	
	var _rated = this.game.add.sprite(0.0, 0.0, 'GamesRated');
	
	this._loadingTxtSheet = this.game.add.sprite(240.0, 478.0, 'LoadingTxtSheet');
	this._loadingTxtSheet.animations.add('play');
	this._loadingTxtSheet.animations.play('play', 8, true);

	// 2019-06-19 modify
	if (gUUID.toString().indexOf("Guest") == -1) {
		this.testServerLoad();
	}
	
	this.BtnStart = this.add.button(257.0, 500.0, 'BtnGameStartSheet', this.next, this, 1, 0, 2, 0);
	this.BtnStart.visible = false;
	
};

/* --- end generated code --- */
// -- user code here --

function loadStart() {
	console.log("게임 리소스 읽는 중.");
	this.load.pack('preloader', 'assets/pack.json');
}

//	This callback is sent the following parameters:
function fileComplete(progress, cacheKey, success, totalLoaded, totalFiles) {
	
}

var gToastFlag = false;
var toast;

function loadComplete() {
	console.log("게임 정보 읽는 중...");
	
	this.game.time.events.repeat(2000, 1, function() {
		console.log("게임 리소스 로딩 완료!");
		if (gUserInfo.result == 0) {
			
			// 친구초대 
			SetFriendVisitePopup();
			
			this._loadingTxtSheet.visible = false;
			this.BtnStart.visible = true;
		}
		else {
			this.toastAlert(gUserInfo.result);			
		}
	}, this);

}

Preloader.prototype.toastAlert = function (_resultCode) {
	if (gToastFlag == false) {
		gToastFlag = true;
		
		// 유저 인포 획득 에러
		toast = stToastMsg.getInstance(this);
		toast.showToastMsg(1000, _resultCode);
	}
};

var gCount = 0;
Preloader.prototype.update = function () {

};


Preloader.prototype.next = function() {
	this.game.state.start("Menu");
};

//2019-06-19 modify
Preloader.prototype.testServerLoad = function () {
	var reqStageClearData = {
			uuid : gUUID,
			nick_name : gNickName
		};	
	
	// Make sure to stringify
	var jsonData = JSON.stringify(reqStageClearData);
	
	var http = new XMLHttpRequest();
	http.open('POST', gURL + 'game/mole/info');
	http.setRequestHeader('Content-type', 'application/json');

	http.send(jsonData);


	http.onreadystatechange = function() {
	  	if ( http.readyState == 4 ) {
	  		if (http.status == 200) {
	  			gLoadStageClearData = new Array();
	  			
	  			var _json = http.responseText;
	
	  			gLoadStageClearData = JSON.parse(_json);
	  			
	  			gStageIDX = gLoadStageClearData.length;
	  			if(gStageIDX < 10){
//	  				this.openTenDataServerSave();
	  				that.openTenDataServerSave();
	  			}
	  		}
	  		else {
	  			console.log("Menu - http.status : " + http.status);
	  			console.log(http.responseText);
	  		}
	  	}
	};
  
};

// 2019-06-19 modify
Preloader.prototype.openTenDataServerSave = function () {
	
//		var saveStageClearData =
//		{
//			uuid : gUUID,
//			nick_name : gNickName,			
//			stage : 0,
//			star : 0,
//			score : 0,
//			date : this.getCurrentTime()
//		};	
//		
//		for(var i=0;i<10;i++){
//			this.saveStageClearData 
//		}
//		// Make sure to stringify
//		var jsonData = JSON.stringify(saveStageClearData);
//		
//		var jsonPack = {};          
//        var ciphertext = CryptoJS.AES.encrypt(jsonData, "!eogksalsrnrakstp@#");
//        jsonPack.packet = "" + ciphertext;
//		
//		var http = new XMLHttpRequest();
//	
//		http.open('POST', gURL + 'game/mole/end');
//		
//		http.setRequestHeader('Content-type', 'application/json');
//	
//		http.send(  JSON.stringify(jsonPack) );
////		http.send(jsonData);
//		
//		http.onreadystatechange = function() {
//			if ( http.readyState == 4 ) {
//				if (http.status == 200) {
//					
//				}
//	      		else {
//	      			console.log("Menu - http.status : " + http.status);
//	      		}
//			}
//		};
};

Preloader.prototype.timePadding = function(n, digits) {
    var zero = '';
    var len = n.toString();

    if (len.length < digits) {
      for (var i = 0; i < digits - len.length; i++)
        zero += '0';
    }
    return zero + len;
};

Preloader.prototype.getCurrentTime = function () {
	var date = new Date();
	var _time = this.timePadding(date.getFullYear(), 4) + "-" + 
	            this.timePadding((date.getMonth() + 1), 2) + "-" + 
	            this.timePadding(date.getDate(), 2) + " " +
	            this.timePadding(date.getHours(), 2) + ":" +
	            this.timePadding(date.getMinutes(), 2) + ":" +
	            this.timePadding(date.getSeconds(), 2);
	
	return _time;
};

function SetFriendVisitePopup() {
    var script = document.createElement('script');
    script.setAttribute('type', 'text/javascript');
    script.setAttribute('src', gHomeURL + '/assets/javascripts/tt-sdk.js');
    script.onload = function () {
       ttsdk.init(GAME_ID);
    };
    document.getElementsByTagName('head')[0].appendChild(script);

    var stylesheet = document.createElement('link');
    stylesheet.setAttribute('rel', 'stylesheet');
    stylesheet.setAttribute('type', 'text/css');
    stylesheet.setAttribute('href', gHomeURL + '/assets/stylesheets/tt-sdk.css');
    document.getElementsByTagName('head')[0].appendChild(stylesheet);
}

