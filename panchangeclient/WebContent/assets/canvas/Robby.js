
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.3 (Phaser v2.6.2)


/**
 * Robby.
 */
function Robby() {
	
	Phaser.State.call(this);
	
}

/** @type Phaser.State */
var Robby_proto = Object.create(Phaser.State.prototype);
Robby.prototype = Robby_proto;
Robby.prototype.constructor = Robby;

Robby.prototype.init = function () {
	
	this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
	
};

Robby.prototype.preload = function () {
	
	this.game.stage.disableVisibilityChange = true;
	
	this.load.pack('main', 'assets/pack.json');
	
};

Robby.prototype.create = function () {
	this.add.sprite(0.0, 0.0, 'LobbyBackImg');
	
	this.add.sprite(160.0, 205.0, 'PanelWaitTeamR');
	
	this.add.sprite(160.0, 350.0, 'PanelWaitTeamB');
	
	this.add.sprite(23.0, 69.0, 'PanelRoomInfo');
	
	var _BtnHelp = this.add.button(943.0, 0.0, 'BtnHelp', onHelpPopup, this, 1, 0, 2, null);
	_BtnHelp.pivot.setTo(81.0, 0.0);
	
	var _BtnExit = this.add.button(1024.0, 0.0, 'BtnExit', leaveRoom, this, 1, 0, 2, null);
	_BtnExit.pivot.setTo(81.0, 0.0);
	
	this.add.button(0.0, 0.0, 'BtnVolControl', onVolumeCtrlPopup, this, 1, 0, 2, null);
	
	this.add.button(81.0, 0.0, 'BtnWinsizeS', toggleFullScreen, this, 1, 0, 2, null);
	
	this.add.sprite(419.5, 8.0, 'TitleRoom');
	
	this.add.sprite(0.0, 360.0, 'TeamFlagB');
	
	this.add.sprite(0.0, 215.0, 'TeamFlagR');
	
	var _BtnSetChange = this.add.button(50.0, 490.0, 'BtnSetChange', onEditRoomSettingsPopup, this, 1, 0, 2, null);
	
	this.add.button(280.0, 490.0, 'BtnSelectUserInfo', onUserInfoPopup, this, 1, 0, 2, null);
	
	var _BtnGameStart = this.add.button(974.0, 490.0, 'BtnGameStart', startGame, this, 1, 0, 2, null);
	_BtnGameStart.pivot.setTo(169.0, 0.0);
	
	var _BtnInviteFriend = this.add.button(744.0, 490.0, 'BtnInviteFriend', onInvitationPopup, this, 1, 0, 2, null);
	_BtnInviteFriend.pivot.setTo(169.0, 0.0);
	
	var _BtnArrowSL = this.add.button(160.0, 276.0, 'BtnArrowSL', prevRedTeam, this, 1, 0, 2, null);
	_BtnArrowSL.pivot.setTo(33.5, 34.0);
	
	var _BtnArrowSR = this.add.button(962.0, 276.0, 'BtnArrowSR', nextRedTeam, this, 1, 0, 2, null);
	_BtnArrowSR.pivot.setTo(33.5, 34.0);
	
	var _BtnArrowSL1 = this.add.button(160.0, 421.0, 'BtnArrowSL', prevBlueTeam, this, 1, 0, 2, null);
	_BtnArrowSL1.pivot.setTo(33.5, 34.0);
	
	var _BtnArrowSR1 = this.add.button(962.0, 421.0, 'BtnArrowSR', nextBlueTeam, this, 1, 0, 2, null);
	_BtnArrowSR1.pivot.setTo(33.5, 34.0);
	
	var _IconLock = this.add.sprite(474.0, 136.0, 'IconLock', 0);
	
	var _txt_roomNum = this.add.text(127.0, 151.0, '00000000', {"font":"16px Arial","fill":"#ffffff"});
	_txt_roomNum.anchor.setTo(0.5, 0.5);
	
	var _txt_roomName = this.add.text(321.0, 151.0, '가나다라마바사아자차카타', {"font":"16px Arial","fill":"#ffffff","align":"center"});
	_txt_roomName.anchor.setTo(0.5, 0.5);
	
	var _txt_roomType = this.add.text(581.0, 151.0, '자유', {"font":"16px Arial","fill":"#ffffff","align":"center"});
	_txt_roomType.anchor.setTo(0.5, 0.5);
	
	var _txt_runningTime = this.add.text(770.0, 151.0, '5분', {"font":"16px Arial","fill":"#ffffff","align":"center"});
	_txt_runningTime.anchor.setTo(0.5, 0.5);
	
	var _txt_boardColor = this.add.text(675.0, 151.0, '빨강', {"font":"16px Arial","fill":"#ffffff","align":"center"});
	_txt_boardColor.anchor.setTo(0.5, 0.5);
	
	var _txt_background = this.add.text(889.0, 151.0, '랜덤', {"font":"16px Arial","fill":"#ffffff","align":"center"});
	_txt_background.anchor.setTo(0.5, 0.5);
	
	var _txt_redMen = this.add.text(75.0, 298.0, '00/00', {"font":"16px Arial","fill":"#ffffff","align":"center"});
	_txt_redMen.anchor.setTo(0.5, 0.5);
	
	var _txt_blueMen = this.add.text(75.0, 443.0, '00/00', {"font":"16px Arial","fill":"#ffffff","align":"center"});
	_txt_blueMen.anchor.setTo(0.5, 0.5);
	
	var _redChief = this.add.sprite(197.0, 208.0, 'ChiefMark');
	
	var _blueChief = this.add.sprite(197.0, 353.0, 'ChiefMark');
	
	var _BtnGameReady = this.add.button(974.0, 490.0, 'BtnGameReady', changeReadyState, this, 1, 0, 2, null);
	_BtnGameReady.pivot.setTo(169.0, 0.0);
	
	
	
	// fields
	
	this.fBtnSetChange = _BtnSetChange;
	this.fBtnGameStart = _BtnGameStart;
	this.fBtnArrowSL = _BtnArrowSL;
	this.fBtnArrowSR = _BtnArrowSR;
	this.fBtnArrowSL1 = _BtnArrowSL1;
	this.fBtnArrowSR1 = _BtnArrowSR1;
	this.fIconLock = _IconLock;
	this.fTxt_roomNum = _txt_roomNum;
	this.fTxt_roomName = _txt_roomName;
	this.fTxt_roomType = _txt_roomType;
	this.fTxt_runningTime = _txt_runningTime;
	this.fTxt_boardColor = _txt_boardColor;
	this.fTxt_background = _txt_background;
	this.fTxt_redMen = _txt_redMen;
	this.fTxt_blueMen = _txt_blueMen;
	this.fRedChief = _redChief;
	this.fBlueChief = _blueChief;
	this.fBtnGameReady = _BtnGameReady;
	this.redUsers = [];
	this.blueUsers = [];
	
	for(var i = 0 ; i < 3 ; i++) {
		for(var j = 0 ; j < 5 ; j++) {	
			var _group = new RedUser(this.game);
			_group.position.setTo(198.0 + j * 148, 225.0 + i * 35);
			_group.visible = false;
			this.redUsers.push(_group);
		}
	}
	
	for(var i = 0 ; i < 3 ; i++) {
		for(var j = 0 ; j < 5 ; j++) {	
			var _group = new BlueUser(this.game);
			_group.position.setTo(198.0 + j * 148, 370.0 + i * 35);
			_group.visible = false;
			this.blueUsers.push(_group);
		}
	}
	this.game.world.bringToTop(this.fBlueChief);
	this.game.world.bringToTop(this.fRedChief);
	
	this.fBlueChief.visible = false;
	this.fRedChief.visible = false;
	this.afterCreate();
	
};

/* --- end generated code --- */
// -- user code here --
var leaveRoom = function(obj) {

	console.log("leaveRoom==================");

	obj.game.audioManager.playSfx("Click");
	obj.game.socketManager.leaveRoom();
	//stop bgm
	obj.game.audioManager.stopBgm();
};

var startGame = function(obj) {
	obj.game.audioManager.playSfx("Click");
	obj.game.socketManager.startGame();
};

var changeReadyState = function(obj) {
	obj.game.audioManager.playSfx("Click");
	obj.game.socketManager.sendReadyState();
};

Robby.prototype.afterCreate = function() {
	var _robbyManager = new RobbyManager(this.game, this);
	this.game.robbyManager = _robbyManager;
	this.game.socketManager.loadedRobby();
	this.game.userInfoManager.inviList = [];
	
	//play bgm
	this.game.audioManager.playBgm('Card_Lob');
	
	this.game.userInfoManager.robby_selected = null;
};

var selUserInRobby = function(obj) {
	var origin = obj.selected;
	var team = "";
	var idx = -1;
	
	for(var i = 0 ; i < obj.game.robbyManager.scene.redUsers.length ; i++) {
		obj.game.robbyManager.scene.redUsers[i].children[0].setFrames(0, 0, 0);
		obj.game.robbyManager.scene.redUsers[i].children[0].selected = false;
		if(obj.game.robbyManager.scene.redUsers[i].children[0] == obj) {
			team = "red";
			idx = i;
		}
	}
	for(var i = 0 ; i < obj.game.robbyManager.scene.blueUsers.length ; i++) {
		obj.game.robbyManager.scene.blueUsers[i].children[0].setFrames(0, 0, 0);
		obj.game.robbyManager.scene.blueUsers[i].children[0].selected = false;
		if(obj.game.robbyManager.scene.blueUsers[i].children[0] == obj) {
			team = "blue";
			idx = i;
		}
	}
	
	if(origin) {
		obj.setFrames(0, 0, 0);
		obj.selected = false;
		team = "";
		idx = -1;
	}
	else {
		obj.setFrames(1, 1, 1);
		obj.selected = true;
		
		if(team == "red") {
			obj.game.userInfoManager.robby_selected = obj.game.userInfoManager.robby_red[idx];
		}
		else {
			obj.game.userInfoManager.robby_selected = obj.game.userInfoManager.robby_blue[idx];
		}
	}
};

var onEditRoomSettingsPopup = function(obj) {
  console.log("onEditRoomSettingsPopup!!!!!!!!!!");
	obj.game.audioManager.playSfx("Click");
	if(obj.game.popupManager.openPopup("editRoomSettings")) {
		var _group = new EditRoomSettingsPopup(obj.game);
		_group.position.setTo(210.5, 80);
		_group.init();
	}
};

var onInvitationPopup = function(obj) {
	obj.game.audioManager.playSfx("Click");
	if(obj.game.userInfoManager.isLogin) {
		obj.game.socketManager.getFrdList();
	}
	else {
		// 비 로그인 처리
		obj.game.panAlert("게스트는 친구초대를 할 수 없습니다.", function() {
		});
	}
};

var onUserInfoPopup = function(obj) {
	obj.game.audioManager.playSfx("Click");
	for(var i = 0 ; i < obj.game.robbyManager.scene.redUsers.length ; i++) {
		if(obj.game.robbyManager.scene.redUsers[i].children[0].selected) {
			obj.game.socketManager.getAnotherUserInfo(obj.game.userInfoManager.robby_red[i]);
			return;
		}
	}
	for(var i = 0 ; i < obj.game.robbyManager.scene.blueUsers.length ; i++) {
		if(obj.game.robbyManager.scene.blueUsers[i].children[0].selected) {
			obj.game.socketManager.getAnotherUserInfo(obj.game.userInfoManager.robby_blue[i]);
			return;
		}
	}
};

var prevRedTeam = function(obj) {
	obj.game.audioManager.playSfx("Click");
	obj.game.robbyManager.moveRedTeam(-1);
};

var nextRedTeam = function(obj) {
	obj.game.audioManager.playSfx("Click");
	obj.game.robbyManager.moveRedTeam(1);
};

var prevBlueTeam = function(obj) {
	obj.game.audioManager.playSfx("Click");
	obj.game.robbyManager.moveBlueTeam(-1);
};

var nextBlueTeam = function(obj) {
	obj.game.audioManager.playSfx("Click");
	obj.game.robbyManager.moveBlueTeam(1);
};

var toggleFullScreen = function(obj) {
	obj.game.audioManager.playSfx("Click");
	
	if (obj.game.scale.isFullScreen)
    {
		obj.game.scale.stopFullScreen();
    }
    else
    {
    	obj.game.scale.startFullScreen(false);
    }
};

Robby.prototype.initUserField = function() {
  console.log("initUserField!!!!!!!!!!");
	onUserTextField = "<DIV id=" + "TajaControlUser" + " style="
	+ "position:absolute;left:" + "375" + "px;top:" + "-100"
	+ "px;width:300px;height:22px;" + "focus" + ">";

	onUserTextFieldInput = "<input type="
	+ "text"
	+ " id="
	+ "robbyInput"
	+ " style='border:0px; border-style : none; background-color:transparent; color : white; outline-style:none;'"
	+ " autofocus><br>" + "</div>";

	userTajaBackground.innerHTML = onUserTextField + onUserTextFieldInput;
  console.log(userTajaBackground.innerHTML)
};

Robby.prototype.update = function() {
	// update 최상단에서 호출...항상 키 포커스를 유지한다.
	try {
		document.getElementsByTagName("input")[document.getElementsByTagName("input").length - 1].focus();
	}
	catch(e) {
		
	}
};