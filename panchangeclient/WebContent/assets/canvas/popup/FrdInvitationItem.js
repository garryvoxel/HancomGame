
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.3 (Phaser v2.6.2)


/**
 * FrdInvitationItem.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function FrdInvitationItem(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	this.game.add.sprite(0.0, 0.0, 'BarL2', null, this);
	
	var _txt_nickname = this.game.add.text(129.0, 7.0, '닉네임은여덟글자', {"font":"bold 20px Arial","fill":"#ffffff","align":"center"}, this);
	_txt_nickname.anchor.setTo(0.5, 0.0);
	
	var _SBtnInvite = this.game.add.button(280.0, 0.0, 'RoomListBtnSelect', changeChecked, this, 1, 0, 2, null, this);
	
	
	
	// fields
	
	this.fTxt_nickname = _txt_nickname;
	this.fSBtnInvite = _SBtnInvite;
	
}

/** @type Phaser.Group */
var FrdInvitationItem_proto = Object.create(Phaser.Group.prototype);
FrdInvitationItem.prototype = FrdInvitationItem_proto;
FrdInvitationItem.prototype.constructor = FrdInvitationItem;

/* --- end generated code --- */
// -- user code here --

FrdInvitationItem.prototype.init = function(nickname, checked, idx, callback) {
	this.fTxt_nickname.setText(nickname);
	this.checked = checked;
	this.idx = idx;
	if(checked) {
		this.fSBtnInvite.setFrames(1, 0, 2, null);
	}
	else {
		this.fSBtnInvite.setFrames(4, 3, 5, null);
	}
	this.callback = callback;
};

var changeChecked = function(obj) {
	obj.game.audioManager.playSfx("Click");
	if(obj.parent.callback(obj.parent.idx)) {
		obj.parent.checked = !obj.parent.checked;
		
		if(obj.parent.checked) {
			obj.parent.fSBtnInvite.setFrames(1, 0, 2, null);
		}
		else {
			obj.parent.fSBtnInvite.setFrames(4, 3, 5, null);
		}
	}
	else {
		obj.parent.parent.visible = false;
		obj.game.panAlert("친구초대는 동시에 10명까지 가능합니다.",function() { obj.parent.parent.visible = true; });
	}
};