
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.3 (Phaser v2.6.2)


/**
 * CreateRoomPopup.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function CreateRoomPopup(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	this.game.add.sprite(0.0, 0.0, 'PopPanelCreateSet', null, this);
	
	this.game.add.sprite(239.0, 35.0, 'TitleRoomCreate', null, this);
	
	this.game.add.button(447.0, -30.0, 'BtnExit', offCreateRoomPopup, this, 1, 0, 2, null, this);
	
	var _STitleBackImg = this.game.add.sprite(98.0, 100.0, 'STitleBackImg', null, this);
	_STitleBackImg.anchor.setTo(0.5, 0.0);
	
	var _STitleAttribute = this.game.add.sprite(252.0, 100.0, 'STitleAttribute', null, this);
	_STitleAttribute.anchor.setTo(0.5, 0.0);
	
	var _STitleMemberNum = this.game.add.sprite(141.0, 180.0, 'STitleMemberNum', null, this);
	_STitleMemberNum.anchor.setTo(0.5, 0.0);
	
	var _STitleTeamColor = this.game.add.sprite(385.0, 100.0, 'STitleTeamColor', null, this);
	_STitleTeamColor.anchor.setTo(0.5, 0.0);
	
	var _STitleRoomName = this.game.add.sprite(398.5, 180.0, 'STitleRoomName', null, this);
	_STitleRoomName.anchor.setTo(0.5, 0.0);
	
	var _STitlePlaytime = this.game.add.sprite(519.0, 100.0, 'STitlePlaytime', null, this);
	_STitlePlaytime.anchor.setTo(0.5, 0.0);
	
	this.game.add.sprite(252.0, 215.0, 'InputOnlyPanel', null, this);
	
	var _roomTitle = this.game.add.text(390.0, 244.0, '', {"font":"18px Arial","fill":"#ffffff"}, this);
	_roomTitle.anchor.setTo(0.5, 0.5);
	
	this.game.add.button(95.0, 327.0, 'BtnRoomCreate1', createFreeRoomBtn, this, 1, 0, 2, null, this);
	
	this.game.add.button(335.0, 327.0, 'BtnRoomCreate2', createClanRoomBtn, this, 1, 0, 2, null, this);
	
	var _DD_MenNumber = new DropDownMenNumber(this.game, this);
	_DD_MenNumber.position.setTo(52.0, 221.0);
	
	var _DD_Background = new DropDownBackground(this.game, this);
	_DD_Background.position.setTo(22.0, 135.0);
	
	
	
	// fields
	
	this.fRoomTitle = _roomTitle;
	this.fDD_MenNumber = _DD_MenNumber;
	this.fDD_Background = _DD_Background;
	
	this.game.createRoom = this;
	this.game.audioManager.playSfx("Popup");
	this.myInput = this.createInput(490, 308);
	this.myInput.setText('');
	
	var _DD_IsFree2 = new DropDownIsFree(this.game);
	_DD_IsFree2.position.setTo(22 + 152 + 22 + 213.49996948242188, 135.0 + 76.0);
	var _DD_Color2 = new DropDownTeamColor(this.game);
	_DD_Color2.position.setTo(22 + 152 + 22 + 112 + 21 + 213.49996948242188, 135.0 + 76.0);
	var _DD_RunningTime2 = new DropDownRunningTime(this.game);
	_DD_RunningTime2.position.setTo(22 + 152 + 22 + 112 + 21 + 112 + 22 + 213.49996948242188, 135.0 + 76.0);
	
	this.fDD_IsFree = _DD_IsFree2;
	this.fDD_Color = _DD_Color2;
	this.fDD_RunningTime = _DD_RunningTime2;
	
	this.game.myPopup = this;
	
	this.myInput.customInit = function() { 
		this.closeOther();
	}.bind(this);
	
}

/** @type Phaser.Group */
var CreateRoomPopup_proto = Object.create(Phaser.Group.prototype);
CreateRoomPopup.prototype = CreateRoomPopup_proto;
CreateRoomPopup.prototype.constructor = CreateRoomPopup;

/* --- end generated code --- */
// -- user code here --
CreateRoomPopup.prototype.closeOther = function() {
	this.fDD_MenNumber.forceClose();
	this.fDD_Background.forceClose();
	this.fDD_IsFree.forceClose();
	this.fDD_Color.forceClose();
	this.fDD_RunningTime.forceClose();
};

var createFreeRoomBtn = function(obj) {
	obj.game.audioManager.playSfx("Click");
	obj.game.myPopup.closeOther();
	
	var data = {};
	data['HOST_NAME'] = obj.game.userInfoManager.nickname;
	data['IS_FREE'] = obj.parent.fDD_IsFree.dDValue;
	data['BACKGROUND'] = obj.parent.fDD_Background.dDValue;
	data['ROOM_NAME'] = obj.parent.myInput.value;
	data['MEMBER_NUM'] = obj.parent.fDD_MenNumber.dDValue;
	data['RUNNING_TIME'] = obj.parent.fDD_RunningTime.dDValue;
	data['COLOR'] = obj.parent.fDD_Color.dDValue;
	data['IS_PUBLIC'] = true;
	data['CLAN'] = obj.game.userInfoManager.clan;
	data['PK'] = obj.game.userInfoManager.pk;

	var roomNameChk = false;
	if(data['ROOM_NAME'].length < 4) {
		roomNameChk = true;
	}
	
	if(roomNameChk) {
		obj.game.createRoom.hidePopup();
		obj.game.panAlert("방 제목은 4~12글자 이내로 입력해주세요.", function() {
			obj.game.createRoom.showPopup();
		});
	}
	else if(data['IS_FREE']) {
		obj.game.createRoom.hidePopup();
		obj.game.socketManager.createRoom(data);
	}
	else if(obj.game.popupManager.openPopup("pwd")) {
		var okCallback = function(pwd) {
			data['PASSWORD'] = pwd;
			obj.game.socketManager.createRoom(data);
		};
		var cancelCallback = function() {
			obj.parent.showPopup();
		};
		obj.parent.hidePopup();
		var _group = new EnterPWDPopup(obj.game);
		_group.init(
			okCallback,
			cancelCallback
		);
		_group.position.setTo(243.5, 120);
		_group.myInput.startFocus();
	}
};

var createClanRoomBtn = function(obj) {
	obj.game.audioManager.playSfx("Click");
	obj.game.myPopup.closeOther();
	
	var data = {};
	data['HOST_NAME'] = obj.game.userInfoManager.nickname;
	data['IS_FREE'] = obj.parent.fDD_IsFree.dDValue;
	data['BACKGROUND'] = obj.parent.fDD_Background.dDValue;
	data['ROOM_NAME'] = obj.parent.myInput.value;
	data['MEMBER_NUM'] = obj.parent.fDD_MenNumber.dDValue;
	data['RUNNING_TIME'] = obj.parent.fDD_RunningTime.dDValue;
	data['COLOR'] = obj.parent.fDD_Color.dDValue;
	data['IS_PUBLIC'] =false;
	data['CLAN'] = obj.game.userInfoManager.clan;
	data['PK'] = obj.game.userInfoManager.pk;

	var roomNameChk = false;
	if(data['ROOM_NAME'].length < 4) {
		roomNameChk = true;
	}
	
	if(roomNameChk) {
		obj.game.createRoom.hidePopup();
		obj.game.panAlert("방 제목은 4~12글자 이내로 입력해주세요.", function() {
			obj.game.createRoom.showPopup();
		});
	}
	else if(data['IS_FREE']) {
		obj.game.createRoom.hidePopup();
		obj.game.socketManager.createRoom(data);
	}
	else if(obj.game.popupManager.openPopup("pwd")) {
		var okCallback = function(pwd) {
			data['PASSWORD'] = pwd;
			obj.game.socketManager.createRoom(data);
		};
		var cancelCallback = function() {
			obj.parent.showPopup();
		};
		obj.parent.hidePopup();
		var _group = new EnterPWDPopup(obj.game);
		_group.init(
			okCallback,
			cancelCallback
		);
		_group.position.setTo(243.5, 120);
		_group.myInput.startFocus();
	}
};

var offCreateRoomPopup = function(obj) {
	obj.game.audioManager.playSfx("Click");
	obj.game.popupManager.closePopup("createRoom");
	obj.parent.fDD_IsFree.destroy();
	obj.parent.fDD_RunningTime.destroy();
	obj.parent.fDD_Color.destroy();
	obj.parent.myInput.destroy();
	obj.parent.destroy();
};

CreateRoomPopup.prototype.hidePopup = function() {
	this.visible = false;
	this.fDD_IsFree.visible = false;
	this.fDD_Color.visible = false;
	this.fDD_RunningTime.visible = false;
};

CreateRoomPopup.prototype.showPopup = function() {
	this.visible = true;
	this.fDD_IsFree.visible = true;
	this.fDD_Color.visible = true;
	this.fDD_RunningTime.visible = true;
};

CreateRoomPopup.prototype.createInput = function(x, y){    
	var myInput = this.game.add.inputField(x, y, {
		fill: '#ffffff',
		font: '17px Arial',
		backgroundColor: '#212d3a',
		cursorColor: '#ffffff',
		width: 220,
		height: 20,
		borderWidth: 0,
		borderColor: '#212d3a',
		max: 12
	});
	
    return myInput;
 };