
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.3 (Phaser v2.6.2)


/**
 * itemEraser.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function itemEraser(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _eraserGroup = this.game.add.group(this);
	_eraserGroup.position.setTo(1200.0, 288.0);
	
	var _ItemWLine = this.game.add.sprite(-24.0, 93.0, 'ItemWLine', null, _eraserGroup);
	_ItemWLine.scale.setTo(2.0, 1.0);
	
	var _ItemErazer = this.game.add.sprite(0.0, 0.0, 'ItemErazer', null, _eraserGroup);
	_ItemErazer.anchor.setTo(0.5, 0.5);
	
	
	
	// fields
	
	this.fEraserGroup = _eraserGroup;
	this.fItemWLine = _ItemWLine;
	this.fItemErazer = _ItemErazer;
	
}

/** @type Phaser.Group */
var itemEraser_proto = Object.create(Phaser.Group.prototype);
itemEraser.prototype = itemEraser_proto;
itemEraser.prototype.constructor = itemEraser;

/* --- end generated code --- */
// -- user code here --

itemEraser.prototype.start = function(boardData) {
	
	this.boardData = boardData;
	
	console.log("start itemEraser");
	
	this.groupTween = this.game.add.tween(this.fEraserGroup).to({x : 512}, 400, Phaser.Easing.Linear.None , false);
	this.shrink = this.game.add.tween(this.fItemWLine.scale).to({ x : 0 }, 600, Phaser.Easing.Linear.None, false);
	this.disappear = this.game.add.tween(this.fEraserGroup).to({ alpha : 0 }, 300, Phaser.Easing.Linear.None, false);
	
	this.groupTween.chain(this.shrink);
	this.shrink.chain(this.disappear);
	
	this.groupTween.start();
	
	this.disappear.onComplete.add(this.activeItemAndDestroy, this);
	
	this.game.audioManager.playSfx('Card_it3');
};

itemEraser.prototype.activeItemAndDestroy = function() {
	
	console.log("destroy eraser");
	
	//itemActive
	this.game.itemManager.changeBoardsText(this.boardData.BOARD);
	
	this.destroy();

};

itemEraser.prototype.killEvent = function() {
	this.destroy();
};