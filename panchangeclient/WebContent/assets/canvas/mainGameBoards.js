
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.3 (Phaser v2.6.2)


/**
 * mainGameBoards.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function mainGameBoards(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	
}

/** @type Phaser.Group */
var mainGameBoards_proto = Object.create(Phaser.Group.prototype);
mainGameBoards.prototype = mainGameBoards_proto;
mainGameBoards.prototype.constructor = mainGameBoards;

/* --- end generated code --- */
// -- user code here --

mainGameBoards.prototype.boards = [];
var h = 13;
var v = 6;

mainGameBoards.prototype.createBoards = function() {
	console.log("create maingame");
	var index = 0;
	var gap = 1;
	var widthSpace = 60;
	var heightSpace = 65;
	
	for (var i = 0; i < h; i++) {
		for (var j = 0; j < v; j++) {
			
			var boardX = ((gap + widthSpace) * i + 0.5) + this.x;
			var boardY = ((gap + heightSpace) * j + 0.5) + this.y;
			var aBoard;
			if (index < ((h*v) / 2)) {
				aBoard = new SmallBoard(this.game, boardX, boardY, "RED");
			} else {
				aBoard = new SmallBoard(this.game, boardX, boardY, "BLUE");
			}
			
			boardWidth = aBoard.board.width;
			boardHeight = aBoard.board.height;
			this.boards[index] = aBoard;
			index++;
		}
	}
};

mainGameBoards.prototype.startGame = function() {
	for (var i = 0; i < this.boards.length; i++) {
		//animation
		if (this.boards[i].teamColor == "RED") {
			this.boards[i].animRR.play();
		} else {
			this.boards[i].animBB.play();
		}
	}
	this.game.audioManager.playSfx('Card_turn');
};